CREATE TABLE users (
    id BIGSERIAL PRIMARY KEY,
    name VARCHAR(128) NOT NULL,
    surname VARCHAR(128) NOT NULL,
    login VARCHAR(128) NOT NULL,
    birthday DATE NOT NULL,
    email VARCHAR(256) NOT NULL,
    password VARCHAR(128) NOT NULL,
    gender VARCHAR(128) NOT NULL,
    skill VARCHAR(128) NOT NULL,
    count_of_trains INT,
    weight INT NOT NULL,
    height INT NOT NULL,
    ROLE VARCHAR(128)
);
DROP TABLE users;
INSERT INTO users VALUES (
                          1,'miha','mishki','mishkin','2004-12-02','dfsdfs@mail.ru', '123123','МУЖСКОЙ','noob',0,80,183
                         );

CREATE TABLE activity_categories ( -- Категория упражнения
    id SERIAL PRIMARY KEY, -- Уникальный идентификатор категории
    category_name VARCHAR(50) NOT NULL UNIQUE );

CREATE TABLE trains (
    id BIGSERIAL PRIMARY KEY,
    title VARCHAR(128) UNIQUE NOT NULL,
    description VARCHAR(512),
    status VARCHAR(128) NOT NULL,
    score DECIMAL(2,2),
    used INT,
    duration_in_mitutes INT,
    count_of_iteration INT,
    place VARCHAR(128) NOT NULL,
    author VARCHAR(128) NOT NULL,
    category_id INT REFERENCES activity_categories(id) );

--рассчитывать количество повторений по формуле, есть конкретное число * коэф. Определить жирный или нет и уровень сложности тренировки
CREATE TABLE users_trains (
    user_id BIGINT REFERENCES users (id),
    trains_id BIGSERIAL REFERENCES trains (id)

);

CREATE TABLE exercises ( -- Упражнение
    id SERIAL PRIMARY KEY, -- Уникальный идентификатор упражнения
    title VARCHAR(100) NOT NULL, -- Название упражнения   description VARCHAR(256), -- Описание упражнения
    duration_in_seconds INT, -- Длительность упражнения (в минутах)--    calories_burned_per_minute INT,  -- Сожженные калории за минуту
    count_of_iteration INT,
    category_id INT REFERENCES activity_categories(id),
    trains_id INT REFERENCES trains(id) ON DELETE SET NULL
);
--добавить теги в упражнения--повторения, подходы
--Сделать перемычку тренировки - упражнения--В ней будет два ключа много книг
--Создать таблицу по сложности в которой будет уровень сложности - количество подходов и-- повторений в подходе, это подгргужается к конкретному упражнению, в зависимости от уровня сложности, который выбрал пользователь
-- DROP TABLE trains, activity_categories, users, users_trains, exercises, Trains_Activity_categories;
---- CREATE TABLE Trains_Activity_categories (
--      train_id BIGINT REFERENCES trains (id),--      category_id INT REFERENCES activity_categories(id),
--      PRIMARY KEY (train_id, category_id)-- );
DROP TABLE activity_categories, trains